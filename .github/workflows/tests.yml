name: Tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

#      - name: Cache Docker layers
#        uses: actions/cache@v2
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-single-buildx

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if we need to rebuild
        if: github.event_name != 'pull_request'
        id: check-need-build
        run: |
          RETURN_CODE=`docker manifest inspect ghcr.io/${{ github.repository }}/web:0.1 > /dev/null && echo $? || echo $?`
          echo "::set-output name=need-build::$RETURN_CODE"

      - name: Build docker image
        if: github.event_name != 'pull_request' && steps.check-need-build.outputs.need-build == '1'
        uses: docker/build-push-action@v2
        with:
          context: .
#          builder: ${{ steps.buildx.outputs.name }}
          push: true
#          load: true
          tags: ghcr.io/${{ github.repository }}/web:0.1
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}/web:0.1
          cache-to: type=inline
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache-new

#      - # Temp fix
#        # https://github.com/docker/build-push-action/issues/252
#        # https://github.com/moby/buildkit/issues/1896
#        name: Move cache
#        run: |
#          rm -rf /tmp/.buildx-cache
#          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

#      - name: Cache docker build
#        uses: whoan/docker-build-with-cache-action@v5.11.1
#        with:
#          username: jcushman
#          password: "${{ secrets.GITHUB_TOKEN }}"
#          registry: docker.pkg.github.com
#          compose_file: docker-compose.yml
      - name: Build the docker-compose stack
        run: docker-compose -f docker-compose.yml up -d  # ignore docker-compose.override.yml
      - name: Check running containers
        run: docker ps -a
      - name: Check logs
        run: docker-compose logs
      - name: Run test suite
        run: docker-compose exec -T web ls /app